{"version":3,"sources":["CurrencyRow.js","App.js","reportWebVitals.js","index.js"],"names":["CurrencyRow","props","currencyOptions","selectedCurrency","onChangeCurrency","amount","onChangeAmount","class","type","value","onChange","map","option","BASE_URL","App","toAmount","fromAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","parseFloat","toFixed","useEffect","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","e","target","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.302dbfe1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport \"./index.css\";\n//import { Button } from 'react-bootstrap';\n//import \"bootstrap/dist/css/bootstrap.min.css\";\n\n\nexport default function CurrencyRow(props) {\n\n  const {\n    currencyOptions,\n    selectedCurrency,\n    onChangeCurrency,\n    amount,\n    onChangeAmount\n  } = props\n\n    return (\n      <div class=\"max-w-xl py-2 appearance-none\">\n        <div class=\"mt-1 relative rounded-md shadow-sm\">\n          <input\n            type=\"number\"\n            value={amount}\n            onChange={onChangeAmount}\n            class=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full py-3 pl-5 pr-20 sm:text-sm border-black rounded-md\"\n          />\n\n          <div class=\"absolute inset-y-0 right-0 flex items-center\">\n            <select\n              value={selectedCurrency}\n              onChange={onChangeCurrency}\n              class=\"focus:ring-indigo-500 focus:border-indigo-500 h-full py-0 pl-2 pr-7 border-transparent bg-transparent text-gray-500 sm:text-sm rounded-md\"\n            >\n              {currencyOptions.map((option) => (\n                <option key={option} value={option} class=\"px-2\">\n                  {option}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </div>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport \"./index.css\";\n//import { Button } from 'react-bootstrap';\n//import 'bootstrap/dist/css/bootstrap.min.css';\nimport CurrencyRow from \"./CurrencyRow\";\n//import './logo.svg';\n//import './logo512.png';\n\nconst BASE_URL = \"https://api.exchangeratesapi.io/latest\";\n\nfunction App() {\n  const [currencyOptions, setCurrencyOptions] = useState([])\n  const [fromCurrency, setFromCurrency] = useState()\n  const [toCurrency, setToCurrency] = useState()\n  const [exchangeRate, setExchangeRate] = useState()\n  const [amount, setAmount] = useState(1)\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true)\n\n  let toAmount, fromAmount\n  if (amountInFromCurrency) {\n    fromAmount = amount\n    toAmount = parseFloat(amount * exchangeRate).toFixed(2);\n  } else {\n    toAmount = amount\n    fromAmount = parseFloat(amount / exchangeRate).toFixed(2);\n  }\n\n  useEffect(() => {\n    fetch(BASE_URL)\n    .then(res => res.json())\n    .then(data => {\n      const firstCurrency = Object.keys(data.rates)[26]\n      setCurrencyOptions([data.base, ...Object.keys(data.rates)])\n      setFromCurrency(Object.keys(data.rates)[11]);\n      setToCurrency(firstCurrency)\n      setExchangeRate(data.rates[firstCurrency])\n    })\n  }, [])\n\n  useEffect(() => {\n    if (fromCurrency!=null  && toCurrency!=null) {\n      fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n      .then(res => res.json())\n      .then(data => setExchangeRate(data.rates[toCurrency]))\n    }\n  }, [fromCurrency, toCurrency])\n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value)\n    setAmountInFromCurrency(true)\n  }\n\n  function handleToAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(false)\n  }\n\n  return (\n    <div class=\"bg-gray-100 h-screen\">\n      <div class=\"bg-indigo-500 w-full p-1\" />\n      <div class=\"max-w-lg mx-auto\">\n        <div class=\"flex justify-center pt-44 text-4xl font-medium\">\n          Currency Converter\n        </div>\n        <div class=\"justify-center py-12\">\n          <div class=\"flex justify-center p-3\">\n            <CurrencyRow\n              currencyOptions={currencyOptions}\n              selectedCurrency={fromCurrency}\n              onChangeCurrency={(e) => setFromCurrency(e.target.value)}\n              onChangeAmount={handleFromAmountChange}\n              amount={fromAmount}\n            />\n          </div>\n\n          <div class=\"flex justify-center p-3\">\n            <CurrencyRow\n              currencyOptions={currencyOptions}\n              selectedCurrency={toCurrency}\n              onChangeCurrency={(e) => setToCurrency(e.target.value)}\n              onChangeAmount={handleToAmountChange}\n              amount={toAmount}\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"fixed -bottom-0 bg-indigo-500 w-full p-2 text-center text-white font-mono text-sm\">\n        Made with ðŸ‘» by Agrata Patel |&nbsp;\n        <a\n          href=\"https://github.com/agratapatel/Currency-Converter\"\n          class=\"underline\"\n        >\n          Github Source Code\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}